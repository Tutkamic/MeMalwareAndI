using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public enum EnemyState
{
    Idle,
    Patrol,
    Trigger
}
public class EnemyStateManager : MonoBehaviour
{
    private EnemyStateBase currentState;
    private EnemyStateIdle stateIdle = new EnemyStateIdle();
    private EnemyStatePatrol statePatrol = new EnemyStatePatrol();
    private EnemyStateTrigger stateTrigger = new EnemyStateTrigger();

    private void OnEnable()
    {
        GameModeHandler.StartMode += StartNewMode;
    }

    private void OnDisable()
    {
        GameModeHandler.StartMode -= StartNewMode;
    }

    void Start()
    {
        currentState = stateIdle;
        currentState.EnterState(this);
    }

    void Update()
    {
        currentState.UpdateState(this);
    }

    public void SwitchState(EnemyStateBase state)
    {
        currentState = state;
        state.EnterState(this);
    }
    public void ActivateState(EnemyState state)
    {
        switch (state)
        {
            case EnemyState.Idle:
                SwitchState(stateIdle);
                break;
            case EnemyState.Patrol:
                SwitchState(statePatrol);
                break;
            case EnemyState.Trigger:
                SwitchState(stateTrigger);
                break;
        }
    }

    private void StartNewMode(GameMode mode)
    {
        switch (mode)
        {
            case GameMode.EnemyTour:
                SwitchState(statePatrol);
                break;
            case GameMode.PlayerTour:
                SwitchState(stateIdle);
                break;
            case GameMode.VirusSelection:
                SwitchState(stateIdle);
                break;
        }

    }

}
