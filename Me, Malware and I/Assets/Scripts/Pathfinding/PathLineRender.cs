using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PathLineRender : MonoBehaviour
{
    LineRenderer lineRenderer;
    PathFinding pathFinding;

    private PathNode startNode;
    private PathNode endNode;
    private List<PathNode> path;
    private List<Vector3> linePos;

    private void OnEnable()
    {
        GameModeHandler.StartMode += StartNewMode;
        InputCharacter.DrawLine += CalculateLinePath;
        InputCharacter.OnFLoorClicked += ClearLine;
        MovementCharacter.StartMoving += ClearLine;
    }


    private void OnDisable()
    {
        GameModeHandler.StartMode -= StartNewMode;
        InputCharacter.DrawLine -= CalculateLinePath;
        MovementCharacter.StartMoving -= ClearLine;
        InputCharacter.OnFLoorClicked -= ClearLine;

    }

    private void StartNewMode(GameMode obj)
    {
        ClearLine();
    }

    private void Awake()
    {
        lineRenderer = GetComponent<LineRenderer>();
        pathFinding = GetComponent<PathFinding>();

    }

    void Start()
    {
        ClearLine();
    }


    private void CalculateLinePath(int mouseX, int mouseZ, int characterPosX, int characterPosZ)
    {
        endNode = pathFinding.GetGridNode(mouseX, mouseZ);
        startNode = pathFinding.GetGridNode(characterPosX, characterPosZ);

        path = pathFinding.FindPath(startNode, endNode);

        linePos = new List<Vector3>();
        for (int i = 0; i < path.Count; i++) linePos.Add(new Vector3(path[i].x, 0.1f, path[i].z));

        lineRenderer.positionCount = linePos.Count;

        for (int i = 0; i < linePos.Count; i++) lineRenderer.SetPosition(i, linePos[i]);

    }
    private void ClearLine()
    {
        lineRenderer.positionCount = 0;
    }
}
