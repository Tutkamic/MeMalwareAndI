using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System.Linq;

public class PathFinding : MonoBehaviour
{
    [SerializeField] GameObject nodeVisual;
    [SerializeField] LayerMask layermask;
    private int width;
    private int height;
    private float cellSize = 1.0f;
    Grid grid;
    private List<FloorTile> floortiles;

    private void Awake()
    {
        floortiles = FindObjectsOfType<FloorTile>().ToList();
    }
    void Start()
    {
        var lastTileInX = floortiles.OrderBy(t => t.gameObject.transform.position.x).LastOrDefault();
        var lastTileInZ = floortiles.OrderBy(t => t.gameObject.transform.position.z).LastOrDefault();
        lastTileInX.Select();
        lastTileInZ.Select();

        width = Mathf.FloorToInt(lastTileInX.transform.position.x) + 1;
        height = Mathf.FloorToInt(lastTileInZ.transform.position.z) + 1;

        grid = new Grid(width, height, cellSize);
        for (int i = 0; i < width; i++)
            for (int j = 0; j < height; j++)
            {
                Vector3 nodePos = new Vector3(transform.position.x + i, 0, transform.position.z + j);
                Instantiate(nodeVisual, nodePos, Quaternion.identity);

                var raycastHit = Physics.Raycast(new Vector3(transform.position.x + i, 0.5f, transform.position.z + j), new Vector3(0, -1, 0), 1, layermask);
                if (raycastHit)
                {
                    grid.GetGridNode(i, j).SetWalkable(true);
                }
            }
    }


    void Update()
    {
        if (Input.GetMouseButtonDown(0))
        {
            RaycastHit hit;
            Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);
            if(Physics.Raycast(ray, out hit))
            {
                if (hit.collider != null)
                    if (hit.transform.gameObject.layer == LayerMask.NameToLayer("Walkable"))
                    {
                        var x = hit.transform.gameObject.transform.position.x;
                        var z = hit.transform.gameObject.transform.position.z;
                        Debug.Log(grid.GetGridNode((int)x, (int)z).isWalkable);
                    }
            }
        }
    }
}
