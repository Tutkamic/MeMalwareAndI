using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using TMPro;
using UnityEngine.UI;

public class CanvasGameStateHandler : MonoBehaviour
{
    [SerializeField] private UnityEngine.UI.Button[] malwareButtons;
    [SerializeField] private UnityEngine.UI.Button changeTourButton;
    [SerializeField] private Sprite[] malwareButtonsOn;
    [SerializeField] private Sprite[] malwareButtonsOff;
    [SerializeField] private GameObject[] malwareText;

    [SerializeField] GameModeSO currentGameMode;

    [SerializeField] Sprite startSprite;
    [SerializeField] Sprite skipSprite;

    private bool resetButtons;

    private int activeMalware;

    private void Update()
    {
        if (currentGameMode.GameMode == GameMode.VirusSelection) MalwareChooseTour();
        else if (currentGameMode.GameMode == GameMode.PlayerTour) PlayerTour();
        else if (currentGameMode.GameMode == GameMode.EnemyTour) EnemyTour();
    }
    private void Start()
    {
        SetButtonActive(false);
        ChangeTourButtonInactive();
        ButtonActive(1);
    }


    public void ButtonActive(int num)
    {
        for (int i = 0; i < malwareButtons.Length; i++)
        {
            UnselectMalwareButton(i+1);
        }
        SetActiveMalware(num);
    }

    public void SetActiveMalware(int num)
    {
        activeMalware = num;
        malwareButtons[num - 1].image.sprite = malwareButtonsOn[num - 1];
        malwareText[num - 1].SetActive(true);

    }

    public void UnselectMalwareButton(int num)
    {
        malwareButtons[num - 1].image.sprite = malwareButtonsOff[num - 1];
        malwareText[num - 1].SetActive(false);
    }

    private void SetButtonActive(bool isActive)
    {
        for (int i = 0; i < malwareButtons.Length; i++)
        {
            malwareButtons[i].interactable = isActive;
        }
    }
    public void MalwareChooseTour()
    {
        changeTourButton.image.sprite = startSprite;
        SetButtonActive(true);
        ChangeTourButtonActive();
        if (resetButtons)
        {
            ButtonActive(1);
            resetButtons = false;
        }
    }

    public void PlayerTour()
    {
        SetButtonActive(false);
        changeTourButton.image.sprite = skipSprite;
    }

    public void EnemyTour()
    {
        resetButtons = true;
        ChangeTourButtonInactive();
    }


    private void ChangeTourButtonInactive()
    {
        changeTourButton.interactable = false;
    }
    private void ChangeTourButtonActive()
    {
        changeTourButton.interactable = true;
    }

}
